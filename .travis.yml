language:
# linux
- cpp

# osx
# - objective-c

env:
# linux, osx
- build=release
- build=debug
- build=cli
- build=gekko

install:
# linux
- if [[ "$build" != "cli" && "$build" != "gekko" ]]; then sudo add-apt-repository -y ppa:fransschreuder1/usbpicprog-stable; fi
- sudo apt-get -qq update
- if [[ "$build" != "gekko" ]]; then sudo apt-get -qq install git cmake gettext libwayland-dev libsdl1.2-dev libxrandr-dev libxext-dev libglew-dev libavcodec-dev libavformat-dev libsoil-dev libsfml-dev libopenal-dev libao-dev libasound2-dev libpulse-dev libportaudio-dev libsoundtouch-dev libbluetooth-dev libreadline-dev libswscale-dev liblzo2-dev; fi
- if [[ "$build" != "cli" && "$build" != "gekko" ]]; then sudo apt-get -qq install wx2.9-headers libwxbase2.9-dev libwxgtk2.9-dev libgtk-3-dev; fi
- if [[ "$build" == "gekko" ]]; then sudo apt-get -qq install colormake; shopt -s expand_aliases; alias make=colormake; fi
- export MAKEFLAGS="-j $((`nproc` / 2))"

# osx
# - brew update
# - brew install cmake
# - export MAKEFLAGS="-j 4"

script:
# linux, osx
- if [[ "$build" == "release" ]]; then cmake . && make; fi
- if [[ "$build" == "debug" ]]; then cmake -DCMAKE_BUILD_TYPE=Debug . && make; fi
- if [[ "$build" == "cli" ]]; then cmake -DDISABLE_WX=ON . && make; fi
- |
 if [[ "$build" == "gekko" ]]; then
  export DEVKITPRO=/opt/devkitpro
  export DEVKITPPC=$DEVKITPRO/devkitPPC
  sudo mkdir -p $DEVKITPRO
  sudo chmod a+rwx $DEVKITPRO
  cd Source/TestSuite
  curl -Ls "https://sourceforge.net/p/devkitpro/perlupdaters/ci/master/tree/devkitPPCupdate.pl?format=raw" > devkitPPCupdate.pl
  chmod +x devkitPPCupdate.pl
  ./devkitPPCupdate.pl
  make -r
 fi
